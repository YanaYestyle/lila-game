@import "@/styles/animations.scss";
@import "@/styles/variables.scss";

.container {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 2rem;

  @media (max-width: $breakpoint-medium), (max-width: $breakpoint-small) {
    grid-template-columns: 1fr;
    animation: fadeIn 0.5s ease-in-out forwards;
  }
}

.image {
  background-image: url("/images/home.png");
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  width: 100%;
  height: calc(100vh - 5em);
  animation: image-in 1s cubic-bezier(0.5, 0, 0.1, 1) 2s backwards;

  // Media queries for image responsiveness
  @media (max-width: $breakpoint-medium) {
    height: 50vh;
    animation: none;
  }

  @media (max-width: $breakpoint-small) {
    height: 30vh;
    animation: none;
  }
}

.column {
  @include inner-outer-right(outer-right, -200%);
  width: 100%;
  z-index: 2;
  animation: outer-right 1s 1s ease both;
  display: flex;
  align-items: center;
  flex-direction: column;
  justify-content: center;
}

.content {
  animation: image-in 1s cubic-bezier(0.5, 0, 0.1, 1) 2s backwards;
  margin: 1rem;
  color: var(--primary);
  text-align: center;
  font-size: 0.9rem;
}

.buttons {
  display: flex;
  flex-direction: column;
  margin: 2.5rem 0;

  button:last-child {
    animation: glow 2500ms linear infinite 2000ms;
  }

  button:not(:last-child) {
    margin-bottom: 0.75rem;
  }
}

.title {
  @include inner-outer-right(inner-right, 200%);
  display: inline-block;
  animation: inner-right 1s 1s ease both;
  font-family: var(--font-family-title);
  font-size: 6vw;
  color: var(--light-black);
}

.first,
.second {
  @include inner-outer-right(outer-right, -200%);
  animation: outer-right 1s 1s cubic-bezier(0.5, 0, 0.1, 1) both;
}

.game {
  padding-left: 0.5rem;
  padding-top: 1em;
  animation: text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;
}

.lila {
  @include inner-outer-right(inner-right, 200%);
  animation: inner-right 1s 1s ease both,
    text-clip 1s 0s cubic-bezier(0.5, 0, 0.1, 1) both;
}

@keyframes text-clip {
  from {
    clip-path: polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%);
  }
  to {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);
  }
}
